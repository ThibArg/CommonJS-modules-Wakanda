/*	utilsMisc.js	A commonJS module handling  things not handled by other modules ;->		(c) 4D SAS, author: Thibaud Arguillere	License: MIT. See the license at the end of this source code		Version		1.0, 2012-07-14		Usage:		var uMisc = require('utilsMisc');		. . . uMisc contains the APIs . . .		Public APIs available:		equalStrings(inString1, inString2)		isInteger(inString)		randomForInteger(inMin, inMax)		*/function _toLowerCaseNoAccents() {	if(this.length > 0) {		return this.toLowerCase().replace(/[àáâãäå]/g,"a")									.replace(/[éèêë]/g,"e")									.replace(/[ìíîï]/g,"i")									.replace(/[ðòóôõöø]/g,"o")									.replace(/[ùúûü]/g,"u")									.replace(/[ýýÿ]/g,"y");	} else {		return '';	}}// ==================================================/** *	@method equalStrings**	@param {string} inString1*	@param {string} inString2**	@return {boolean} if inString1 and inString2 are equals, comparison being case insensitive and non diacritical**	WARNING: in an intensive loop, this can slow down the application (lot of allocations)**	WARNING: the routine does not check if inString1 and inString2 are*			 valid strings => could throw an error**/exports.equalStrings = function(inString1, inString2) {	var r = false;		if(inString1.length === inString2.length) {		r = _toLowerCaseNoAccents(inString1) === _toLowerCaseNoAccents(inString2);	}		return r;	}// ==================================================/** *	@method isInteger**	@param {string} inString*	@return {boolean}**/exports.isInteger = function(inString) {	var n = parseInt(inString);	if(!isNaN(n)) {		return n.toString().length == inString.length;	}		return false;}// ==================================================/** *	@method randomForIntegers**	@param {number} inMin*	@param {number} inMax*	@return {number}**	return an integer whose value is >= inMin and <= inMax*	If inMin or inMax are invalid (not passed, or inMax > inMin), returns an integer between 0-100**/exports.randomForIntegers = function(inMin, inMax) {		if(typeof inMin === "number" && typeof inMax === "number" && inMin <= inMax) {		return Math.round( inMin + (Math.random() * (inMax - inMin)) );	}		return Math.round( Math.random() * 100 );}/*	License: MIT (http://www.opensource.org/licenses/MIT)	Permission is hereby granted, free of charge, to any person	obtaining a copy of this software and associated documentation	files (the "Software"), to deal in the Software without	restriction, including without limitation the rights to use,	copy, modify, merge, publish, distribute, sublicense, and/or sell	copies of the Software, and to permit persons to whom the	Software is furnished to do so, subject to the following	conditions:		The above copyright notice and this permission notice shall be	included in all copies or substantial portions of the Software.		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES	OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND	NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,	WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING	FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR	OTHER DEALINGS IN THE SOFTWARE.*/// --EOF